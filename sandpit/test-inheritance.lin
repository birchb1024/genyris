defvar 'Thing
   dict
      .toString "toString in Thing"
defvar 'C (dict (_print : 23) (_classes : (list Thing)))
defvar 'C2 (dict (_draw : 99))
defvar 'obj (dict (_classes : (cons C (cons C2 nil))))

defvar 'Standard-Class
    dict
defvar 'Base-1
    dict 
        _classes : (list Standard-Class)
        _toString : "Base-1 toString"
defvar 'Base-2
    dict 
        _classes : (cons Standard-Class nil)
        _log : "Base-2 log"
defvar 'Class-1
    dict
        _classes : (cons Standard-Class nil)
        _superclasses : (cons Base-1 nil)
        _print : "Class-1 print"
        _new
            lambda (_a)
                dict
                    _classes : (cons Class-1 nil)
                    _a : _a
defvar 'Class-2
    dict
        _classes : (cons Standard-Class nil)
        _superclasses : (cons Base-2 nil)
        _draw : "Class-2 draw"
defvar 'object 
    dict
      _classes : (cons Class-1 (cons Class-2 nil))


