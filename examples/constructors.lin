;; Copyright 2008 Peter William Birch <birchb@genyis.org>
;;
;; This software may be used and distributed according to the terms
;; of the Genyris License, in the file "LICENSE", incorporated herein by reference.
;; Copyright 2008 Peter William Birch <birchb@genyis.org>
;;
;; This software may be used and distributed according to the terms
;; of the Genyris License, in the file "LICENSE", incorporated herein by reference.
;;
;;;
;;; Examples of constructors, traditional and modern.
;;;

;
;  A class which does it's own construction but checks nothing
;
class BasicPerson ()

    def _new (name age)
      (tag (dict) _self)
        define _name name
        define _age age
        _self

;
;  A class which uses the _new in Object, and adds type checking
;
class PersonTraditional (Object)

   def _init((name:String) (age: Bignum))
      define _name name
      define _age age


class PersonModern ()

   def _valid?()
      _name : String
      _age : Bignum

   def _new(name age)
      (dict)                             ; create the object
         define _name name               ; add the data
         define _age age
         _self : PersonModern             ; check type now
         tag _self PersonModern           ; ok, so add the class
         _self

