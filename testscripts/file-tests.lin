define fi
   File(!new "C:\\foo.txt")
define out 	
   fi (!open 'write)
out (!format "Hello\n")
out (!format "World\n")
out
  !format "  A: ~a~%  S: ~s~%  C: ~c ~~\n" :
      "GONZO\n" :
       "ALONZO\n" :
        33
out (!close)

define fi
   File(!new "C:\\foo.txt")
define in 	
   fi (!open 'read)
print (in(!read))

in(!close)

def dump()
  var fi (File(!new "C:\\foo.txt"))
  var in (fi (!open 'read))
  var ch nil
  var count 0
  while (in(!hasData))
     set^ count (+ count 1)
     write (in(!read)) '-
  in(!close)
  print "\n" count
   

def parse-file()
  var fi (File(!new "C:\\foo.lsp"))
  var in (fi (!open 'read))
  var parser (ParenParser(!new in))
  var exp nil
  while
     not
        equal? EOF
           set^ exp (parser(!read))
     write exp
     display "\n"
  parser(!close)
   

def parse-sfs-file()
  var fi (File(!new "C:\\foo.sfs"))
  var in (fi (!open 'read))
  var sfs (StringFormatStream(!new in))
  var parser (ParenParser(!new sfs))
  var exp nil
  while
     not
        equal? EOF
           set^ exp (parser(!read))
     write exp
     display "\n"
  parser(!close)


def eval-sfs-file()
  var fi (File(!new "C:\\foo.sfs"))
  var in (fi (!open 'read))
  var sfs (StringFormatStream(!new in))
  var parser (ParenParser(!new sfs))
  var exp nil
  while
     not
        equal? EOF
           set^ exp (eval (parser(!read)))
     display exp
  parser(!close)
   